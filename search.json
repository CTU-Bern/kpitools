[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/fabrication.html","id":"day-of-week","dir":"Articles","previous_headings":"","what":"Day of week","title":"Detecting data fabrication with `kpitools`","text":"clinical trials, may odd randomizations visits occur weekend. depends local customs course, trial . example, might reasonable expect trial emergency department recruit weekend, trial department schedule appointments . , depicting day week participants visits may useful. demonstrate, generate data, x might randomization date visit date similar.  KPI functions, fabrication functions also allow stratification given variables. default, faceted plot returned, using scale subplot.  can use plot-specific scales either via scales option: returning list plots, themes modifications applied wrapped e.g. patchwork:  (modifications can made regardless output type)","code":"set.seed(234) dat <- data.frame(   date = lubridate::ymd(\"2020-05-01\") + sample(-20:20, 40, TRUE),   datetime = lubridate::ymd_h(\"2020-05-01 14\") + 60^2*sample(0:20, 40, TRUE),   by = c(rep(\"Site 1\", 10), rep(\"Site 2\", 30))  ) dat %>% fab_dow(\"date\") dat %>% fab_dow(\"date\", \"by\") dat %>% fab_dow(\"date\", \"by\", scales = \"free_x\") dat %>% fab_dow(\"date\", \"by\", output = \"list\") %>%    purrr::map2(.y = names(.), ~ .x + ggtitle(.y) + theme_kpitools()) %>%    patchwork::wrap_plots()"},{"path":"/articles/fabrication.html","id":"time-of-day","dir":"Articles","previous_headings":"","what":"Time of day","title":"Detecting data fabrication with `kpitools`","text":"Similarly, may also surprised visits (randomizations …) occur night.  , specification variable gives values per level variable. default, returns list objects, wrapped using e.g. patchwork package.  Plots can also faceted, disadvantage axes scale.","code":"dat %>% fab_tod(\"datetime\") dat %>% fab_tod(\"datetime\", \"by\") %>%    patchwork::wrap_plots() dat %>% fab_tod(\"datetime\", \"by\", output = \"facet\")"},{"path":"/articles/kpitools.html","id":"summary-functions","dir":"Articles","previous_headings":"","what":"Summary functions","title":"Using `kpitools`","text":"kpitools comes set functions summarizing KPIs. functions passed kpi via kpi_fn argument. Say KPI proportion cars MPG less 15… first create variable pass kpi appropriate summary function.","code":"mtcars$mpg15 <- mtcars$mpg < 15 kpi(data = mtcars,      var = \"mpg15\",     kpi_fn = kpi_fn_perc,     txt = \"Milage < 15 MPG\") #> Study level: #>              txt n  N n_nonmiss   stat #>  Milage < 15 MPG 5 32        32 15.625"},{"path":"/articles/kpitools.html","id":"using-custom-functions","dir":"Articles","previous_headings":"Summary functions","what":"Using custom functions","title":"Using `kpitools`","text":"Custom functions can also utilized. Simply define function accepts dataframe performs summary function choice var variable. summarised variable called stat. example summarise variable variance. recommend adding N variable number observations, used plotting (size points relative number observations group).","code":"fn <- function(x){   x %>%     summarize(stat = var(var)) }  kpi(mtcars, \"mpg\", kpi_fn = fn) #> Study level: #>  txt    stat #>  mpg 36.3241 fn <- function(x){   x %>%     summarize(N = n(),               stat = var(var)) }  kpi(mtcars, \"mpg\", kpi_fn = fn) #> Study level: #>  txt  N    stat #>  mpg 32 36.3241"},{"path":"/articles/kpitools.html","id":"hierarchies","dir":"Articles","previous_headings":"","what":"Hierarchies","title":"Using `kpitools`","text":"can also look specific subgroups (e.g. clinical trial, interested performance particular countries centers) via argument. Using mtcars example, can use number cylinders. can see low mileage cars 8 cylinder group, 35.7142857% cars low mileage. can also pass multiple variables (can consider two levels levels hierarchy simultaneously) , see cars manual gearboxes problematic automatic gearboxes.","code":"x_by <- (kpi(data = mtcars,               var = \"mpg15\",              kpi_fn = kpi_fn_perc,              txt = \"Milage < 15 MPG\",              by = \"cyl\")) x_by #> Study level: #>              txt n  N n_nonmiss   stat #>  Milage < 15 MPG 5 32        32 15.625 #>  #> Grouped by cyl: #>              txt cyl n  N n_nonmiss     stat #>  Milage < 15 MPG   4 0 11        11  0.00000 #>  Milage < 15 MPG   6 0  7         7  0.00000 #>  Milage < 15 MPG   8 5 14        14 35.71429 #>  #> No outliers x_by <- (kpi(data = mtcars,               var = \"mpg15\",              kpi_fn = kpi_fn_perc,              txt = \"Milage < 15 MPG\",              by = c(\"cyl\", \"am\"))) x_by #> Study level: #>              txt n  N n_nonmiss   stat #>  Milage < 15 MPG 5 32        32 15.625 #>  #> Grouped by cyl: #>              txt cyl n  N n_nonmiss     stat #>  Milage < 15 MPG   4 0 11        11  0.00000 #>  Milage < 15 MPG   6 0  7         7  0.00000 #>  Milage < 15 MPG   8 5 14        14 35.71429 #>  #> No outliers #> Grouped by am: #>              txt am n  N n_nonmiss     stat #>  Milage < 15 MPG  0 5 19        19 26.31579 #>  Milage < 15 MPG  1 0 13        13  0.00000 #>  #> No outliers"},{"path":"/articles/kpitools.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Using `kpitools`","text":"hierarchies used, KPIs can also visualized plotting object, returns list ggplot2 objects (can modify plots afterwards; suggest wide, short plot, e.g. fig.width=7, fig.height=1.5 R chunk header).   size points relative number observations (participants) site/group. kpitools contains ggplot2 can used remove y-axis, move legend make various changes:  Modifications can made plots easily via e.g. lapply purrr::map patchwork package, example, used arrange plots","code":"(p <- plot(x_by)) #> $cyl #>  #> $am p$cyl + theme_kpitools() p <- purrr::map2(p, names(p), function(x, y){   x +                                       # extract the ggplot object     theme_kpitools() +                      # apply the theme     guides(size = guide_legend(nrow = 1)) + # make other modifications     ggtitle(toupper(y)) +                   # add a title     scale_size_continuous(                         breaks = c(0,5,10,15,20),             # point sizes for legends       limits = c(0,20))                     # limits of the legend }) patchwork::wrap_plots(p, ncol = 1)"},{"path":"/articles/kpitools.html","id":"from-summary-statistics-to-risk","dir":"Articles","previous_headings":"","what":"From summary statistics to risk","title":"Using `kpitools`","text":"quite common talking KPIs link given value summary statistic degree risk. kpitools provides provisions , via breakpoints argument. higher numbers summary statistic related lower risk, direction argument can used invert label order. options either increasing decreasing abbreviations accepted. default, number breakpoints used create variations high low via risklabs function. instance, giving three six values breakpoints produces following sets labels. 5 groups (six breakpoints), labels must defined manually. concept applies riskcols function assign color risk level. ’s simple override labels risklabels argument (careful combining risklabels /riskcolors direction arguments label order inverted).","code":"kpi(data = mtcars,      var = \"mpg\",     txt = \"Milage per gallon\",     by = \"cyl\",     breakpoints = c(0, 20, 30)) #> Study level: #>                txt  N n_nonmiss     stat risk cols #>  Milage per gallon 32        32 20.09062 high  red #>  #> Grouped by cyl: #>                txt cyl  N n_nonmiss     stat risk  cols #>  Milage per gallon   4 11        11 26.66364 high   red #>  Milage per gallon   6  7         7 19.74286  low green #>  Milage per gallon   8 14        14 15.10000  low green #>  #> No outliers kpi(data = mtcars,      var = \"mpg\",     txt = \"Milage per gallon\",     by = \"cyl\",     breakpoints = c(0, 20, 30),     direction = \"decreasing\")  #> Study level: #>                txt  N n_nonmiss     stat risk cols #>  Milage per gallon 32        32 20.09062  low  red #>  #> Grouped by cyl: #>                txt cyl  N n_nonmiss     stat risk  cols #>  Milage per gallon   4 11        11 26.66364  low   red #>  Milage per gallon   6  7         7 19.74286 high green #>  Milage per gallon   8 14        14 15.10000 high green #>  #> No outliers risklabs(c(0, 20, 30)) #> [1] \"low\"  \"high\" risklabs(c(0, 20, 30, 40)) #> [1] \"low\"      \"moderate\" \"high\" risklabs(c(0, 20, 30, 40, 50)) #> [1] \"very low\"  \"low\"       \"high\"      \"very high\" risklabs(c(0, 20, 30, 40, 50, 60)) #> [1] \"very low\"  \"low\"       \"moderate\"  \"high\"      \"very high\" kpi(data = mtcars,      var = \"mpg\",     txt = \"Milage per gallon\",     by = \"cyl\",     breakpoints = c(0, 20, 30),      risklabels = c(\"too low\", \"too high\"),     riskcolors = c(\"pink\",\"blue\")) #> Study level: #>                txt  N n_nonmiss     stat     risk cols #>  Milage per gallon 32        32 20.09062 too high blue #>  #> Grouped by cyl: #>                txt cyl  N n_nonmiss     stat     risk cols #>  Milage per gallon   4 11        11 26.66364 too high blue #>  Milage per gallon   6  7         7 19.74286  too low pink #>  Milage per gallon   8 14        14 15.10000  too low pink #>  #> No outliers"},{"path":"/articles/kpitools.html","id":"individual-kpis-to-sets-of-kpis","dir":"Articles","previous_headings":"","what":"Individual KPIs to sets of KPIs","title":"Using `kpitools`","text":"Individual KPIs might useful report KPIs looked one order. common, however KPIs reported one levels KPIs level shown together e.g. table. kpitools provides utilities type report . First, make kpilist via c function. Next, can use kpi_accumulate collect KPIs given strata together. can access individual tables list object. want split output levels variable, specify split = FALSE.","code":"x_by2 <- (kpi(data = mtcars,               var = \"mpg\",              kpi_fn = kpi_fn_mean,              txt = \"Milage (MPG)\",              by = c(\"cyl\", \"am\")))  kpis <- c(x_by, x_by2) (k <- kpi_accumulate(kpis)) #> $overall #>               txt  n  N n_nonmiss     stat #> 1 Milage < 15 MPG  5 32        32 15.62500 #> 2    Milage (MPG) NA 32        32 20.09062 #>  #> $cyl #> $cyl$`4` #> # A tibble: 2 × 6 #>   txt               cyl     n     N n_nonmiss  stat #>   <chr>           <dbl> <int> <int>     <int> <dbl> #> 1 Milage < 15 MPG     4     0    11        11   0   #> 2 Milage (MPG)        4    NA    11        11  26.7 #>  #> $cyl$`6` #> # A tibble: 2 × 6 #>   txt               cyl     n     N n_nonmiss  stat #>   <chr>           <dbl> <int> <int>     <int> <dbl> #> 1 Milage < 15 MPG     6     0     7         7   0   #> 2 Milage (MPG)        6    NA     7         7  19.7 #>  #> $cyl$`8` #> # A tibble: 2 × 6 #>   txt               cyl     n     N n_nonmiss  stat #>   <chr>           <dbl> <int> <int>     <int> <dbl> #> 1 Milage < 15 MPG     8     5    14        14  35.7 #> 2 Milage (MPG)        8    NA    14        14  15.1 #>  #>  #> $am #> $am$`0` #> # A tibble: 2 × 6 #>   txt                am     n     N n_nonmiss  stat #>   <chr>           <dbl> <int> <int>     <int> <dbl> #> 1 Milage < 15 MPG     0     5    19        19  26.3 #> 2 Milage (MPG)        0    NA    19        19  17.1 #>  #> $am$`1` #> # A tibble: 2 × 6 #>   txt                am     n     N n_nonmiss  stat #>   <chr>           <dbl> <int> <int>     <int> <dbl> #> 1 Milage < 15 MPG     1     0    13        13   0   #> 2 Milage (MPG)        1    NA    13        13  24.4 #>  #>  #> attr(,\"class\") #> [1] \"kpi_accumulate\" \"list\" # Overall study k$overall #>               txt  n  N n_nonmiss     stat #> 1 Milage < 15 MPG  5 32        32 15.62500 #> 2    Milage (MPG) NA 32        32 20.09062  # 8 cylinder cars k$cyl$`8` #> # A tibble: 2 × 6 #>   txt               cyl     n     N n_nonmiss  stat #>   <chr>           <dbl> <int> <int>     <int> <dbl> #> 1 Milage < 15 MPG     8     5    14        14  35.7 #> 2 Milage (MPG)        8    NA    14        14  15.1 kpi_accumulate(kpis, by = \"cyl\", split = FALSE) #> # A tibble: 6 × 6 #>   txt               cyl     n     N n_nonmiss  stat #>   <chr>           <dbl> <int> <int>     <int> <dbl> #> 1 Milage < 15 MPG     4     0    11        11   0   #> 2 Milage < 15 MPG     6     0     7         7   0   #> 3 Milage < 15 MPG     8     5    14        14  35.7 #> 4 Milage (MPG)        4    NA    11        11  26.7 #> 5 Milage (MPG)        6    NA     7         7  19.7 #> 6 Milage (MPG)        8    NA    14        14  15.1"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alan G. Haynes. Author, maintainer. Mattia Branca. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Haynes (2024). kpitools: Tools creating key performance indicator reports clinical trial. R package version 0.2.3.","code":"@Manual{,   title = {kpitools: Tools for creating key performance indicator reports for clinical trial},   author = {Alan G. Haynes},   year = {2024},   note = {R package version 0.2.3}, }"},{"path":"/index.html","id":"kpitools-","dir":"","previous_headings":"","what":"Tools for creating key performance indicator reports for clinical trial","title":"Tools for creating key performance indicator reports for clinical trial","text":"Tools creating key performance indicator (KPI) reports. package can installed CTU Bern universe via package can also installed github via remotes package Note remotes treats warnings (e.g. certain package built different version R) errors. see error, run following line try : package loaded, usual, via main function kpi function. dataframe passed together variable interest current KPI. summary function also needs passed determines KPI calculated. plot method output kpi returns list ggplot2 objects.  details, see vignette:","code":"install.packages('kpitools', repos = c('https://ctu-bern.r-universe.dev', 'https://cloud.r-project.org')) # install.packages(\"remotes\") remotes::install_github(\"CTU-Bern/kpitools\") Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS = \"true\") library(kpitools) data(mtcars)  mtcars$highmpg <- mtcars$mpg > 20 kpis <- (mtcars %>%   kpi(var = \"highmpg\",                          # variable to be summarized (focus of the KPI)         kpi_fn = kpi_fn_perc,                     # summary function          txt = \"Percentage MPG > 20\",              # (optional) nicer text to add to tables        by = \"cyl\",                               # (optional) stratifying variable        breakpoints = c(0,33.3,66.6,100),         # (optional) cutoff points        risklabels = c(\"Low\", \"Medium\", \"High\"))) # (optional) labels for the cutoff points plot <- plot(kpis) plot$cyl +   theme_kpitools() vignette(\"kpitools\")"},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Tools for creating key performance indicator reports for clinical trial","text":"package logo created ggplot2 hexSticker.","code":""},{"path":"/reference/as.kpilist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a kpilist — as.kpilist","title":"Convert a list to a kpilist — as.kpilist","text":"Convert list kpilist","code":""},{"path":"/reference/as.kpilist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a kpilist — as.kpilist","text":"","code":"as.kpilist(x)"},{"path":"/reference/as.kpilist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a kpilist — as.kpilist","text":"x list kpi objects","code":""},{"path":"/reference/as.kpilist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a kpilist — as.kpilist","text":"kpilist","code":""},{"path":"/reference/as.kpilist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list to a kpilist — as.kpilist","text":"","code":"l <- lapply(c(\"drat\", \"hp\", \"qsec\"), function(x){  kpi(mtcars,      var = x,      by = c(\"am\", \"cyl\"),      kpi_fn = kpi_fn_median) }) as.kpilist(l) #> $drat__median #> Study level: #>   txt  N n_nonmiss  stat #>  drat 32        32 3.695 #>  #> Grouped by am: #>   txt am  N n_nonmiss stat #>  drat  0 19        19 3.15 #>  drat  1 13        13 4.08 #>  #> No outliers #> Grouped by cyl: #>   txt cyl  N n_nonmiss  stat #>  drat   4 11        11 4.080 #>  drat   6  7         7 3.900 #>  drat   8 14        14 3.115 #>  #> No outliers #>  #> $hp__median #> Study level: #>  txt  N n_nonmiss stat #>   hp 32        32  123 #>  #> Grouped by am: #>  txt am  N n_nonmiss stat #>   hp  0 19        19  175 #>   hp  1 13        13  109 #>  #> No outliers #> Grouped by cyl: #>  txt cyl  N n_nonmiss  stat #>   hp   4 11        11  91.0 #>   hp   6  7         7 110.0 #>   hp   8 14        14 192.5 #>  #> No outliers #>  #> $qsec__median #> Study level: #>   txt  N n_nonmiss  stat #>  qsec 32        32 17.71 #>  #> Grouped by am: #>   txt am  N n_nonmiss  stat #>  qsec  0 19        19 17.82 #>  qsec  1 13        13 17.02 #>  #> No outliers #> Grouped by cyl: #>   txt cyl  N n_nonmiss   stat #>  qsec   4 11        11 18.900 #>  qsec   6  7         7 18.300 #>  qsec   8 14        14 17.175 #>  #> No outliers #>  #> attr(,\"class\") #> [1] \"kpilist\" \"list\""},{"path":"/reference/c.kpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate kpi objects — c.kpi","title":"Concatenate kpi objects — c.kpi","text":"Concatenate kpi objects","code":""},{"path":"/reference/c.kpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate kpi objects — c.kpi","text":"","code":"# S3 method for class 'kpi' c(...)"},{"path":"/reference/c.kpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate kpi objects — c.kpi","text":"... kpi  kpilist objects","code":""},{"path":"/reference/c.kpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate kpi objects — c.kpi","text":"kpilist object","code":""},{"path":"/reference/c.kpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate kpi objects — c.kpi","text":"","code":"kpi1 <- mtcars %>%   kpi(var = \"mpg\", by = c(\"am\", \"cyl\"), txt = \"MPG\",       kpi_fn = kpi_fn_median) kpi2 <- mtcars %>%   kpi(var = \"drat\", by = c(\"am\", \"cyl\"), txt = \"DRAT\",       kpi_fn = kpi_fn_median) l <- c(kpi1, kpi2) kpi3 <- mtcars %>%   mutate(cylgt4 = cyl > 4) %>%   kpi(var = \"cylgt4\", by = c(\"am\", \"cyl\"), txt = \"Cylinders\",       kpi_fn = kpi_fn_perc) l2 <- c(l, kpi3)"},{"path":"/reference/fab_dow.html","id":null,"dir":"Reference","previous_headings":"","what":"Day of week figure(s) — fab_dow","title":"Day of week figure(s) — fab_dow","text":"normal setting may observations occur weekend indicative data fabrication. fab_dow (short fabrication, day week), produces plot may help identify problems. Customs vary different countries, accounted interpreting figures.","code":""},{"path":"/reference/fab_dow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Day of week figure(s) — fab_dow","text":"","code":"fab_dow(   data,   var,   by = NULL,   dow_fmt = \"%a\",   output = c(\"facet\", \"list\"),   col = \"grey\",   fill = \"grey\",   ... )"},{"path":"/reference/fab_dow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Day of week figure(s) — fab_dow","text":"data cdata frame containing var (, optionally, ) variable(s) var string. Name variable containing relevant dates datetimes (coerced date via .Date) string. Name variable denoting grouping dow_fmt format day week output output format facet combines figures via ggplot2::facet_wrap, list returns list ggplot2 plots col colour use bar lines fill colour use bar fill ... options passed facet_wrap (see examples)","code":""},{"path":"/reference/fab_dow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Day of week figure(s) — fab_dow","text":"list ggplot2 object","code":""},{"path":"/reference/fab_dow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Day of week figure(s) — fab_dow","text":"","code":"set.seed(234) dat <- data.frame(   x = Sys.Date() + sample(-20:19, 40, TRUE),   by = c(rep(1, 10), rep(2, 30)) ) dat %>% fab_dow(\"x\")  dat %>% fab_dow(\"x\", \"by\")  # free x scale dat %>% fab_dow(\"x\", \"by\", scales = \"free_x\")  # different colour bars dat %>% fab_dow(\"x\", fill = \"orange\")  # list of plots dat %>% fab_dow(\"x\", \"by\", output = \"list\") #> $`1`  #>  #> $`2`  #>  # change colours dat %>% fab_dow(\"x\", col = \"purple\", fill = \"pink\")"},{"path":"/reference/fab_tod.html","id":null,"dir":"Reference","previous_headings":"","what":"Time of day figure(s) — fab_tod","title":"Time of day figure(s) — fab_tod","text":"normal setting may observations occur night indicative data fabrication. fab_tod (short fabrication, time day), produces plot may help identify problems. Customs vary different countries, accounted interpreting figures.","code":""},{"path":"/reference/fab_tod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time of day figure(s) — fab_tod","text":"","code":"fab_tod(   data,   var,   by = NULL,   dow_fmt = \"%a\",   output = c(\"list\", \"facet\"),   col_poly = \"black\",   x_poly = c(8.5, 21.5),   col_bars = \"grey\" )"},{"path":"/reference/fab_tod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time of day figure(s) — fab_tod","text":"data data frame containing var (, optionally, ) variable(s) var string. Name variable containing relevant datetimes string. Name variable denoting grouping dow_fmt format day week output output format facet combines figures via ggplot2::facet_wrap, list returns list ggplot2 plots col_poly colour use region indicating possible fabrication x_poly x coordinates start end region indicating possible fabrication col_bars colour use bars indicating counts","code":""},{"path":"/reference/fab_tod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time of day figure(s) — fab_tod","text":"list ggplot2 object","code":""},{"path":"/reference/fab_tod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time of day figure(s) — fab_tod","text":"Due limitation faceting plots polar coordinates, faceted plots y coordinate (equivalent fixed axes). free coordinate system, use list output (default) wrap together using e.g. patchwork, possibly applying customizations advance.","code":""},{"path":"/reference/fab_tod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time of day figure(s) — fab_tod","text":"","code":"set.seed(234) dat <- data.frame(   x = lubridate::ymd_h(\"2020-05-01 14\") + 60^2*sample(0:20, 40, TRUE),   by = c(rep(1, 10), rep(2, 30)) ) dat %>% fab_tod(\"x\")  dat %>% fab_tod(\"x\") + theme_kpitools()  dat %>% fab_tod(\"x\", \"by\") #> $`1`  #>  #> $`2`  #>  #faceted of plots dat %>% fab_tod(\"x\", \"by\", output = \"facet\")  #with patchwork patchwork::wrap_plots(dat %>% fab_tod(\"x\", \"by\"))"},{"path":"/reference/kpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create KPI tables — kpi","title":"Create KPI tables — kpi","text":"Create KPI tables","code":""},{"path":"/reference/kpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create KPI tables — kpi","text":"","code":"kpi(   data,   var,   by = NULL,   kpi_fn = kpi_fn_mean,   txt = \"\",   n_iqr = 2,   breakpoints = NULL,   risklabels = risklabs(breakpoints),   riskcolors = riskcols(breakpoints),   direction = c(\"increasing\", \"decreasing\"),   raw_cut = FALSE,   keep_data = FALSE )"},{"path":"/reference/kpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create KPI tables — kpi","text":"data data frame var variable summarize optional variable(s) group kpi_fn summary function txt descriptive text n_iqr number IQRs /lower/upper quartiles considered outliers breakpoints cut points (KPIs use traffic light system) risklabels labels cut points. default, variations low/moderate/high used riskcolors colors cut points. default, variations green/yellow/red used direction seriousness relative breakpoints raw_cut add group variable without applying risklabels keep_data keep raw data ","code":""},{"path":"/reference/kpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create KPI tables — kpi","text":"list either 1 (length() + 1) lists.","code":""},{"path":"/reference/kpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create KPI tables — kpi","text":"","code":"kpi_test <- mtcars %>%   mutate(cylgt4 = cyl > 4) %>%   kpi(var = \"mpg\",       breakpoints = c(0, 22, 50),       by = c(\"am\", \"cyl\"),       txt = \"MPG\",       kpi_fn = kpi_fn_median)"},{"path":"/reference/kpi_accumulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Accumulate kpilists into KPIs per site lists The KPIs themselves are all well and good for e.g. a report where you walk through each individual KPI and present all of the info there, but they're not ideal if you want all of the KPIs for a given site or country or the overall study in a single table. kpi_accumulate does this conversion — kpi_accumulate","title":"Accumulate kpilists into KPIs per site lists The KPIs themselves are all well and good for e.g. a report where you walk through each individual KPI and present all of the info there, but they're not ideal if you want all of the KPIs for a given site or country or the overall study in a single table. kpi_accumulate does this conversion — kpi_accumulate","text":"Accumulate kpilists KPIs per site lists KPIs well good e.g. report walk individual KPI present info , ideal want KPIs given site country overall study single table. kpi_accumulate conversion","code":""},{"path":"/reference/kpi_accumulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accumulate kpilists into KPIs per site lists The KPIs themselves are all well and good for e.g. a report where you walk through each individual KPI and present all of the info there, but they're not ideal if you want all of the KPIs for a given site or country or the overall study in a single table. kpi_accumulate does this conversion — kpi_accumulate","text":"","code":"kpi_accumulate(kpilist, by = NULL, split = TRUE)"},{"path":"/reference/kpi_accumulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accumulate kpilists into KPIs per site lists The KPIs themselves are all well and good for e.g. a report where you walk through each individual KPI and present all of the info there, but they're not ideal if you want all of the KPIs for a given site or country or the overall study in a single table. kpi_accumulate does this conversion — kpi_accumulate","text":"kpilist list KPIs variable kpi call accumulate split logical. Whether split output levels variable(s)","code":""},{"path":"/reference/kpi_accumulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accumulate kpilists into KPIs per site lists The KPIs themselves are all well and good for e.g. a report where you walk through each individual KPI and present all of the info there, but they're not ideal if you want all of the KPIs for a given site or country or the overall study in a single table. kpi_accumulate does this conversion — kpi_accumulate","text":"","code":"kpi1 <- mtcars %>%   kpi(var = \"mpg\", by = c(\"am\", \"cyl\"), txt = \"MPG\",       kpi_fn = kpi_fn_median, breakpoints = c(0, 20, 30, 50)) kpi2 <- mtcars %>%   kpi(var = \"drat\", by = c(\"am\", \"cyl\"), txt = \"DRAT\",       kpi_fn = kpi_fn_median, breakpoints = c(0, 3, 4, 50)) l <- c(kpi1, kpi2) kpi3 <- mtcars %>%   mutate(cylgt4 = cyl > 4) %>%   kpi(var = \"cylgt4\", by = c(\"am\", \"cyl\"), txt = \"Cylinders\",       kpi_fn = kpi_fn_perc, , breakpoints = c(0, 30, 50, 100)) l2 <- c(l, kpi3) kpi_accumulate(l2) #> $overall #>         txt  N n_nonmiss   stat     risk   cols  n #> 1       MPG 32        32 19.200      low  green NA #> 2      DRAT 32        32  3.695 moderate yellow NA #> 3 Cylinders 32        32 65.625     high    red 21 #>  #> $am #> $am$`0` #> # A tibble: 3 × 8 #>   txt          am     N n_nonmiss  stat risk     cols       n #>   <chr>     <dbl> <int>     <int> <dbl> <fct>    <fct>  <int> #> 1 MPG           0    19        19 17.3  low      green     NA #> 2 DRAT          0    19        19  3.15 moderate yellow    NA #> 3 Cylinders     0    19        19 84.2  high     red       16 #>  #> $am$`1` #> # A tibble: 3 × 8 #>   txt          am     N n_nonmiss  stat risk     cols       n #>   <chr>     <dbl> <int>     <int> <dbl> <fct>    <fct>  <int> #> 1 MPG           1    13        13 22.8  moderate yellow    NA #> 2 DRAT          1    13        13  4.08 high     red       NA #> 3 Cylinders     1    13        13 38.5  moderate yellow     5 #>  #>  #> $cyl #> $cyl$`4` #> # A tibble: 3 × 8 #>   txt         cyl     N n_nonmiss  stat risk     cols       n #>   <chr>     <dbl> <int>     <int> <dbl> <fct>    <fct>  <int> #> 1 MPG           4    11        11 26    moderate yellow    NA #> 2 DRAT          4    11        11  4.08 high     red       NA #> 3 Cylinders     4    11        11  0    NA       NA         0 #>  #> $cyl$`6` #> # A tibble: 3 × 8 #>   txt         cyl     N n_nonmiss  stat risk     cols       n #>   <chr>     <dbl> <int>     <int> <dbl> <fct>    <fct>  <int> #> 1 MPG           6     7         7  19.7 low      green     NA #> 2 DRAT          6     7         7   3.9 moderate yellow    NA #> 3 Cylinders     6     7         7 100   high     red        7 #>  #> $cyl$`8` #> # A tibble: 3 × 8 #>   txt         cyl     N n_nonmiss   stat risk     cols       n #>   <chr>     <dbl> <int>     <int>  <dbl> <fct>    <fct>  <int> #> 1 MPG           8    14        14  15.2  low      green     NA #> 2 DRAT          8    14        14   3.12 moderate yellow    NA #> 3 Cylinders     8    14        14 100    high     red       14 #>  #>  #> attr(,\"class\") #> [1] \"kpi_accumulate\" \"list\"           # only the cyl level kpi_accumulate(l2, by = \"cyl\") #> $`4` #> # A tibble: 3 × 8 #>   txt         cyl     N n_nonmiss  stat risk     cols       n #>   <chr>     <dbl> <int>     <int> <dbl> <fct>    <fct>  <int> #> 1 MPG           4    11        11 26    moderate yellow    NA #> 2 DRAT          4    11        11  4.08 high     red       NA #> 3 Cylinders     4    11        11  0    NA       NA         0 #>  #> $`6` #> # A tibble: 3 × 8 #>   txt         cyl     N n_nonmiss  stat risk     cols       n #>   <chr>     <dbl> <int>     <int> <dbl> <fct>    <fct>  <int> #> 1 MPG           6     7         7  19.7 low      green     NA #> 2 DRAT          6     7         7   3.9 moderate yellow    NA #> 3 Cylinders     6     7         7 100   high     red        7 #>  #> $`8` #> # A tibble: 3 × 8 #>   txt         cyl     N n_nonmiss   stat risk     cols       n #>   <chr>     <dbl> <int>     <int>  <dbl> <fct>    <fct>  <int> #> 1 MPG           8    14        14  15.2  low      green     NA #> 2 DRAT          8    14        14   3.12 moderate yellow    NA #> 3 Cylinders     8    14        14 100    high     red       14 #>  #> attr(,\"class\") #> [1] \"kpi_accumulate\" \"list\"           # only the study/overall level kpi_accumulate(l2, by = \"overall\") #>         txt  N n_nonmiss   stat     risk   cols  n #> 1       MPG 32        32 19.200      low  green NA #> 2      DRAT 32        32  3.695 moderate yellow NA #> 3 Cylinders 32        32 65.625     high    red 21 # no splitting kpi_accumulate(l2, split = FALSE) #> $overall #>         txt  N n_nonmiss   stat     risk   cols  n #> 1       MPG 32        32 19.200      low  green NA #> 2      DRAT 32        32  3.695 moderate yellow NA #> 3 Cylinders 32        32 65.625     high    red 21 #>  #> $am #> # A tibble: 6 × 8 #>   txt          am     N n_nonmiss  stat risk     cols       n #>   <chr>     <dbl> <int>     <int> <dbl> <fct>    <fct>  <int> #> 1 MPG           0    19        19 17.3  low      green     NA #> 2 MPG           1    13        13 22.8  moderate yellow    NA #> 3 DRAT          0    19        19  3.15 moderate yellow    NA #> 4 DRAT          1    13        13  4.08 high     red       NA #> 5 Cylinders     0    19        19 84.2  high     red       16 #> 6 Cylinders     1    13        13 38.5  moderate yellow     5 #>  #> $cyl #> # A tibble: 9 × 8 #>   txt         cyl     N n_nonmiss   stat risk     cols       n #>   <chr>     <dbl> <int>     <int>  <dbl> <fct>    <fct>  <int> #> 1 MPG           4    11        11  26    moderate yellow    NA #> 2 MPG           6     7         7  19.7  low      green     NA #> 3 MPG           8    14        14  15.2  low      green     NA #> 4 DRAT          4    11        11   4.08 high     red       NA #> 5 DRAT          6     7         7   3.9  moderate yellow    NA #> 6 DRAT          8    14        14   3.12 moderate yellow    NA #> 7 Cylinders     4    11        11   0    NA       NA         0 #> 8 Cylinders     6     7         7 100    high     red        7 #> 9 Cylinders     8    14        14 100    high     red       14 #>  #> attr(,\"class\") #> [1] \"kpi_accumulate\" \"list\""},{"path":"/reference/kpi_cut.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut KPI indicators — kpi_cut","title":"Cut KPI indicators — kpi_cut","text":"Cut KPI indicators","code":""},{"path":"/reference/kpi_cut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut KPI indicators — kpi_cut","text":"","code":"kpi_cut(   kpitab,   breakpoints,   risklabels = risklabs(breakpoints),   riskcolors = riskcols(breakpoints),   direction = c(\"increasing\", \"decreasing\"),   raw_cut = FALSE )"},{"path":"/reference/kpi_cut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut KPI indicators — kpi_cut","text":"kpitab output calc_kpi breakpoints cut points (KPIs use traffic light system) risklabels labels cut points. default, variations low/moderate/high used riskcolors colors cut points. default, variations green/yellow/red used direction seriousness relative breakpoints raw_cut add group variable without applying risklabels","code":""},{"path":"/reference/kpi_cut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut KPI indicators — kpi_cut","text":"","code":"kpitab <- mtcars %>%    kpitools:::kpi_calc(\"mpg\", by = \"am\",      kpi_fn = kpi_fn_median, txt = \"MPG\") cutpoints <- c(0, 20, 30) kpitools:::kpi_cut(kpitab, cutpoints, risklabels = c(\"Low\", \"High\")) #> # A tibble: 2 × 7 #>   txt      am     N n_nonmiss  stat risk  cols  #>   <chr> <dbl> <int>     <int> <dbl> <fct> <fct> #> 1 MPG       0    19        19  17.3 Low   green #> 2 MPG       1    13        13  22.8 High  red   kpitools:::kpi_cut(kpitab, cutpoints, risklabels = 1:2) #> # A tibble: 2 × 7 #>   txt      am     N n_nonmiss  stat risk  cols  #>   <chr> <dbl> <int>     <int> <dbl> <fct> <fct> #> 1 MPG       0    19        19  17.3 1     green #> 2 MPG       1    13        13  22.8 2     red   kpitools:::kpi_cut(kpitab, cutpoints) #> # A tibble: 2 × 7 #>   txt      am     N n_nonmiss  stat risk  cols  #>   <chr> <dbl> <int>     <int> <dbl> <fct> <fct> #> 1 MPG       0    19        19  17.3 low   green #> 2 MPG       1    13        13  22.8 high  red   kpitools:::kpi_cut(kpitab, cutpoints, riskcolors = c(\"pink\",\"blue\"), direction=\"decreasing\") #> # A tibble: 2 × 7 #>   txt      am     N n_nonmiss  stat risk  cols  #>   <chr> <dbl> <int>     <int> <dbl> <fct> <fct> #> 1 MPG       0    19        19  17.3 high  pink  #> 2 MPG       1    13        13  22.8 low   blue"},{"path":"/reference/kpi_fn_.html","id":null,"dir":"Reference","previous_headings":"","what":"KPI summary functions — kpi_fn_n","title":"KPI summary functions — kpi_fn_n","text":"functions intended run . intended passed arguments kpi kpi_calc functions. summarize data appropriate manner type KPI. example, kpi_fn_prop counts number cases total number observations calculates proportion. kpi_fn_median simply calculates median observations.","code":""},{"path":"/reference/kpi_fn_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KPI summary functions — kpi_fn_n","text":"","code":"kpi_fn_n(.data)  kpi_fn_prop(.data)  kpi_fn_perc(.data)  kpi_fn_median(.data)  kpi_fn_mean(.data)  kpi_fn_iqr(.data)  kpi_fn_min(.data)  kpi_fn_max(.data)  kpi_fn_missing(.data)"},{"path":"/reference/kpi_fn_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KPI summary functions — kpi_fn_n","text":".data data frame","code":""},{"path":"/reference/kpi_fn_.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KPI summary functions — kpi_fn_n","text":"Functions accept dataframe var variable return dataframe stat (variables optional, although N variable allows compatibility downstream functions). provided functions return stat, n_nonmiss N, also returning n. See examples passing custom functions.","code":""},{"path":"/reference/kpi_fn_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KPI summary functions — kpi_fn_n","text":"","code":"# mean kpi(mtcars, \"mpg\", kpi_fn = kpi_fn_mean) #> Study level: #>  txt  N n_nonmiss     stat #>  mpg 32        32 20.09062 #>  # median kpi(mtcars, \"mpg\", kpi_fn = kpi_fn_median) #> Study level: #>  txt  N n_nonmiss stat #>  mpg 32        32 19.2 #>  # interquartile range kpi(mtcars, \"mpg\", kpi_fn = kpi_fn_iqr) #> Study level: #>  txt  N n_nonmiss  stat #>  mpg 32        32 7.375 #>  # minimum kpi(mtcars, \"mpg\", kpi_fn = kpi_fn_min) #> Study level: #>  txt  N n_nonmiss stat #>  mpg 32        32 10.4 #>  # maximum kpi(mtcars, \"mpg\", kpi_fn = kpi_fn_max) #> Study level: #>  txt  N n_nonmiss stat #>  mpg 32        32 33.9 #>  # proportion kpi(mtcars, \"am\", kpi_fn = kpi_fn_prop) #> Warning: 'kpi_fn_prop' takes a sum of 'var'. It is intended for 0/1 or logical variables #> Study level: #>  txt  n  N n_nonmiss    stat #>   am 13 32        32 0.40625 #>  # percentage kpi(mtcars, \"am\", kpi_fn = kpi_fn_perc) #> Warning: 'kpi_fn_perc' takes a sum of 'var'. It is intended for 0/1 or logical variables #> Study level: #>  txt  n  N n_nonmiss   stat #>   am 13 32        32 40.625 #>  # number/sum kpi(mtcars, \"am\", kpi_fn = kpi_fn_n) #> Warning: 'kpi_fn_n' takes a sum of 'var'. It is intended for 0/1 or logical variables #> Study level: #>  txt stat  N n_nonmiss #>   am   13 32        32 #>"},{"path":"/reference/kpi_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of KPI summary functions provided by kpitools. — kpi_fns","title":"Get a list of KPI summary functions provided by kpitools. — kpi_fns","text":"Get list KPI summary functions provided kpitools.","code":""},{"path":"/reference/kpi_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of KPI summary functions provided by kpitools. — kpi_fns","text":"","code":"kpi_fns()"},{"path":"/reference/kpi_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of KPI summary functions provided by kpitools. — kpi_fns","text":"character vector functions","code":""},{"path":[]},{"path":"/reference/kpi_fns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of KPI summary functions provided by kpitools. — kpi_fns","text":"","code":"kpi_fns() #> [1] \"kpi_fn_iqr\"     \"kpi_fn_max\"     \"kpi_fn_mean\"    \"kpi_fn_median\"  #> [5] \"kpi_fn_min\"     \"kpi_fn_missing\" \"kpi_fn_n\"       \"kpi_fn_perc\"    #> [9] \"kpi_fn_prop\""},{"path":"/reference/kpi_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the outliers — kpi_outlier","title":"Get the outliers — kpi_outlier","text":"Get outliers","code":""},{"path":"/reference/kpi_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the outliers — kpi_outlier","text":"","code":"kpi_outlier(kpitab, n_iqr = 2)"},{"path":"/reference/kpi_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the outliers — kpi_outlier","text":"kpitab result calc_kpi n_iqr number IQRs /lower/upper quartiles considered outliers","code":""},{"path":"/reference/kpi_outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the outliers — kpi_outlier","text":"kpitab just outliers","code":""},{"path":"/reference/kpi_outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the outliers — kpi_outlier","text":"","code":"# data(mtcars) # mtcars %>% #   kpi_calc(\"mpg\", by = \"am\", kpi_fn = kpi_fn_median) %>% #   kpi_outlier()"},{"path":"/reference/plot.kpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot KPI objects — plot.kpi","title":"Plot KPI objects — plot.kpi","text":"Plot KPI objects","code":""},{"path":"/reference/plot.kpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot KPI objects — plot.kpi","text":"","code":"# S3 method for class 'kpi' plot(x, y = 1, col = \"#E6002EFF\", pch = 21, ...)"},{"path":"/reference/plot.kpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot KPI objects — plot.kpi","text":"x result kpi y ignored col colour points pch point character ... possible future expansion","code":""},{"path":"/reference/plot.kpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot KPI objects — plot.kpi","text":"list ggplot objects","code":""},{"path":"/reference/plot.kpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot KPI objects — plot.kpi","text":"","code":"# defaults kpi <- mtcars %>%   kpi(\"mpg\", by = c(\"am\", \"vs\"), txt = \"MPG\") plot(kpi) #> $am  #>  #> $vs  #>   # customizing the plots plots <- plot(kpi)  plots$am +   theme_bw() +   labs(title = \"Foo\")"},{"path":"/reference/print.kpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for kpi objects — print.kpi","title":"Print method for kpi objects — print.kpi","text":"Print method kpi objects","code":""},{"path":"/reference/print.kpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for kpi objects — print.kpi","text":"","code":"# S3 method for class 'kpi' print(x, table = TRUE, outlier = TRUE, ...)"},{"path":"/reference/print.kpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for kpi objects — print.kpi","text":"x kpi object table logical, whether add table stats grouping variable(s) output outlier logical, whether add table outliers output ... currently used","code":""},{"path":"/reference/print.kpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for kpi objects — print.kpi","text":"output printed console","code":""},{"path":"/reference/print.kpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for kpi objects — print.kpi","text":"","code":"kpi <- mtcars %>%   mutate(cylgt4 = cyl > 4) %>%   kpi(var = \"mpg\", breakpoints = c(0, 22, 50), by = c(\"am\", \"cyl\"), txt = \"MPG\",       kpi_fn = kpi_fn_median) print(kpi, table = TRUE, outlier = FALSE) #> Study level: #>  txt  N n_nonmiss stat risk  cols #>  MPG 32        32 19.2  low green #>  #> Grouped by am: #>  txt am  N n_nonmiss stat risk  cols #>  MPG  0 19        19 17.3  low green #>  MPG  1 13        13 22.8 high   red #>  #>  #> Grouped by cyl: #>  txt cyl  N n_nonmiss stat risk  cols #>  MPG   4 11        11 26.0 high   red #>  MPG   6  7         7 19.7  low green #>  MPG   8 14        14 15.2  low green #>  #>"},{"path":"/reference/riskcols.html","id":null,"dir":"Reference","previous_headings":"","what":"Colors for KPIs cutoffs — riskcols","title":"Colors for KPIs cutoffs — riskcols","text":"Colors KPIs cutoffs","code":""},{"path":"/reference/riskcols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colors for KPIs cutoffs — riskcols","text":"","code":"riskcols(x)"},{"path":"/reference/riskcols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colors for KPIs cutoffs — riskcols","text":"x breakpoints","code":""},{"path":"/reference/riskcols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colors for KPIs cutoffs — riskcols","text":"string length(x) - 1 suitable colors.","code":""},{"path":"/reference/riskcols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colors for KPIs cutoffs — riskcols","text":"","code":"riskcols(1:4) #> [1] \"green\"  \"yellow\" \"red\""},{"path":"/reference/risklabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Labels for KPIs with cutoffs — risklabs","title":"Labels for KPIs with cutoffs — risklabs","text":"Labels KPIs cutoffs","code":""},{"path":"/reference/risklabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labels for KPIs with cutoffs — risklabs","text":"","code":"risklabs(x)"},{"path":"/reference/risklabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labels for KPIs with cutoffs — risklabs","text":"x breakpoints","code":""},{"path":"/reference/risklabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Labels for KPIs with cutoffs — risklabs","text":"string length(x) - 1 suitable labels.","code":""},{"path":"/reference/risklabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labels for KPIs with cutoffs — risklabs","text":"","code":"risklabs(1:4) #> [1] \"low\"      \"moderate\" \"high\""},{"path":"/reference/theme_kpitools.html","id":null,"dir":"Reference","previous_headings":"","what":"kpitools ggplot2 theme — theme_kpitools","title":"kpitools ggplot2 theme — theme_kpitools","text":"Theme based theme_bw removing y-axis moving legend beneath plot.","code":""},{"path":"/reference/theme_kpitools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kpitools ggplot2 theme — theme_kpitools","text":"","code":"theme_kpitools()"},{"path":"/reference/theme_kpitools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kpitools ggplot2 theme — theme_kpitools","text":"ggplot2 theme object","code":""},{"path":"/reference/theme_kpitools.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kpitools ggplot2 theme — theme_kpitools","text":"","code":"kpi <- mtcars %>%   kpi(\"mpg\", by = \"cyl\", txt = \"MPG\")  # without the theme plot(kpi)$cyl  # with the theme plot(kpi)$cyl +   theme_kpitools()"},{"path":"/news/index.html","id":"kpitools-023","dir":"Changelog","previous_headings":"","what":"kpitools 0.2.3","title":"kpitools 0.2.3","text":"BUG FIX - fab_tod failed literally “”","code":""},{"path":"/news/index.html","id":"kpitools-022","dir":"Changelog","previous_headings":"","what":"kpitools 0.2.2","title":"kpitools 0.2.2","text":"Option change fill bars fab_dow","code":""},{"path":"/news/index.html","id":"kpitools-021","dir":"Changelog","previous_headings":"","what":"kpitools 0.2.1","title":"kpitools 0.2.1","text":"Addition .kpilist function Option change colour bars fab_dow Option (keep_data) retain original data kpi object (located x$data)","code":""},{"path":"/news/index.html","id":"kpitools-020","dir":"Changelog","previous_headings":"","what":"kpitools 0.2.0","title":"kpitools 0.2.0","text":"Addition tools data fabrication (fab_dow fab_tod) Addition new vignette data fabrication","code":""},{"path":"/news/index.html","id":"kpitools-011","dir":"Changelog","previous_headings":"","what":"kpitools 0.1.1","title":"kpitools 0.1.1","text":"Added colors assigned risk level.","code":""},{"path":"/news/index.html","id":"kpitools-010","dir":"Changelog","previous_headings":"","what":"kpitools 0.1.0","title":"kpitools 0.1.0","text":"Initial version usable, although incomplete, package.","code":""}]
